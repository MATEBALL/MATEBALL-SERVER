plugins {
	id 'java'
	id 'org.springframework.boot' version '3.4.6'
	id 'io.spring.dependency-management' version '1.1.7'
}

group = 'at'
version = '0.0.1-SNAPSHOT'

java {
	toolchain {
		languageVersion = JavaLanguageVersion.of(17)
	}
}

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.springframework:spring-webflux'
	compileOnly 'org.projectlombok:lombok'
	runtimeOnly 'com.h2database:h2'
	runtimeOnly 'com.mysql:mysql-connector-j'
	annotationProcessor 'org.projectlombok:lombok'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
	testCompileOnly 'org.projectlombok:lombok:1.18.32'
	testAnnotationProcessor 'org.projectlombok:lombok:1.18.32'

	// security
	implementation 'org.springframework.boot:spring-boot-starter-security'

	// jwt
	implementation 'io.jsonwebtoken:jjwt-api:0.11.5'
	runtimeOnly 'io.jsonwebtoken:jjwt-impl:0.11.5'
	runtimeOnly 'io.jsonwebtoken:jjwt-jackson:0.11.5'

	// redis
	implementation 'org.springframework.boot:spring-boot-starter-data-redis'
	implementation 'org.springframework.boot:spring-boot-starter-validation'

  	// swagger
	implementation 'org.springdoc:springdoc-openapi-starter-webmvc-ui:2.7.0'

	// QueryDSL
	implementation 'com.querydsl:querydsl-jpa:5.1.0:jakarta'
	annotationProcessor 'com.querydsl:querydsl-apt:5.1.0:jakarta'

	// Jakarta Persistence
	implementation 'jakarta.persistence:jakarta.persistence-api:3.1.0'
	annotationProcessor 'jakarta.persistence:jakarta.persistence-api:3.1.0'
}

tasks.named('test') {
	useJUnitPlatform()
}

def querydslDir = "$buildDir/generated"

tasks.withType(JavaCompile).configureEach {
	options.generatedSourceOutputDirectory = file(querydslDir)
}

sourceSets {
	main {
		java {
			srcDirs += "$buildDir/generated/sources/annotationProcessor/java/main"
		}
	}
}

tasks.withType(JavaCompile) {
	options.compilerArgs << '-parameters'
}